version: '3.8'

services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./client:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - server
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api
    networks:
      - app-network
    command: npm start

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - mongo
      - redis
    environment:
      - NODE_ENV=development
      - PORT=5000
      - MONGODB_URI=mongodb://mongo:27017/flexrocket
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=<your-jwt-secret-here-change-in-production>
      - JWT_EXPIRES_IN=7d
      - CORS_ORIGIN=http://localhost:3000
      - LOG_LEVEL=info
      - STUN_SERVERS=stun:stun.l.google.com:19302,stun:stun1.l.google.com:19302
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX=100
    networks:
      - app-network
    command: npm run dev

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=flexrocket
    networks:
      - app-network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - client
      - server
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
  redis-data: 